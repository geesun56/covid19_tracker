{"version":3,"sources":["App.module.css","components/Chart/Chart.module.css","components/CovidCards/Cards.module.css","container/Navigation/index.js","components/CovidCards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","assets/images/covid_image.jpg","pages/CovidStatus/index.js","components/VaccineCards/index.js","assets/images/vaccine_image.jpg","components/VaccineChart/index.js","pages/VaccineStatus/index.js","pages/AboutMe/index.js","App.js","reportWebVitals.js","index.js","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","width","spacer","height","title","padding","tabs","alignSelf","toolbar","minHeight","display","paddingLeft","TabsWrappedLabel","props","classes","menu","setMenu","className","AppBar","color","position","Toolbar","Typography","variant","Tabs","value","onChange","event","newMenu","console","log","aria-label","Tab","label","icon","Cards","data","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","gutterBottom","start","end","confirmed","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","case_url","fetchData","country","a","access_url","axios","get","fetchDailyData","error","fetchCountries","countries","map","con","name","fetchVaccineStatus","keyword","bent","require","getString","csv","fromString","then","obj","Chart","useState","dailyData","setDailyData","useEffect","LoadData","lineChart","labels","d","reportDate","datasets","total","borderColor","fill","options","text","barChart","legend","CountryPicker","handleCountryChange","FormControl","formControl","Autocomplete","id","getOptionLabel","option","searchBar","renderInput","params","TextField","newValue","alignItems","justifyItems","flexDirection","marginTop","image","CovidStatus","setData","selectedCountry","setCountry","setCountries","dataLoading","getCountries","rows","alt","src","covidImage","margin","total_count","borderBottom","total_rate","full_vaccine","VaccineCards","worldData","countryData","vaccineData","length","total_vaccinations","date","people_fully_vaccinated","people_fully_vaccinated_per_hundred","justifySelf","marginBottom","topTen","borders","VaccineChart","topData","setTopData","dataset","setDataset","singleData","setSingleData","newData","forEach","ele","newRow","find","r","processed","type","c","push","total_vaccinations_per_hundred","sort","b","getTime","processData","e","index","dataset_init","targetRow","loadData","topTenChart","singleChart","daily_vaccinations","VaccineStatus","setCountryData","setVaccineData","setWorldData","VaccineImage","cData","vData","wData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,yB,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,2B,yCCA9BD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,+LCU7JC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CC,MAAO,SAETC,OAAO,CACLD,MAAO,UACPE,OAAQ,OACR,4BAA4B,CAC1BA,OAAQ,UAGZC,MAAM,CACJR,SAAU,EACV,4BAA4B,CAC1BK,MAAO,OACPI,QAAS,oBAIbC,KAAK,CACH,4BAA4B,CAC1BC,UAAU,YAIdC,QAAQ,CACNC,UAAW,OAEX,4BAA4B,CAC1BF,UAAU,UACVG,QAAS,QACTC,YAAa,QAMJ,SAASC,EAAiBC,GACvC,IAAMC,EAAUtB,IACTuB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,QAQb,OACE,sBAAKC,UAAWH,EAAQnB,KAAxB,UAEE,cAACuB,EAAA,EAAD,CAAQC,MAAM,UAAUC,SAAS,QAAjC,SACA,eAACC,EAAA,EAAD,CAASJ,UAAWH,EAAQN,QAA5B,UACA,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWH,EAAQV,MAA5C,8BAII,eAACoB,EAAA,EAAD,CAAMP,UAAWH,EAAQR,KAAMmB,MAAOV,EAAMW,SAd/B,SAACC,EAAOC,GAC3BZ,EAAQY,GACRC,QAAQC,IAAIF,IAY8DG,aAAW,OAA/E,UACA,cAACC,EAAA,EAAD,CACEP,MAAM,QACNQ,MAAM,aAER,cAACD,EAAA,EAAD,CAAKP,MAAM,UAAUQ,MAAM,gBAC3B,cAACD,EAAA,EAAD,CAAKP,MAAM,QAAQQ,MAAM,GAAGC,KAAM,cAAC,IAAD,CAAcf,MAAM,wBAM1D,qBAAKF,UAAWH,EAAQZ,Y,2GCvBfiC,EAnDD,SAACtB,GAAY,IAGhBuB,EAAQvB,EAARuB,KACP,OAAW,MAARA,EAEK,qBAAKnB,UAAWoB,IAAOC,UAAvB,SACI,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UAEI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG7B,UAAW8B,IAAGV,IAAOW,KAAMX,IAAOY,UAA7E,SACA,eAACC,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CAAYH,MAAM,YAAYgC,cAAY,EAA1C,sBACA,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACI,cAAC,IAAD,CAAS6B,MAAQ,EAAGC,IAAKjB,EAAKkB,UAAU7B,MAAO8B,SAAW,EAAGC,UAAU,QAE3E,cAAClC,EAAA,EAAD,CAAYH,MAAM,UAAlB,SAA6B,IAAIsC,KAAKrB,EAAKsB,YAAYC,iBACvD,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAApB,qDAIJ,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG7B,UAAW8B,IAAGV,IAAOW,KAAMX,IAAOuB,WAA7E,SACA,eAACV,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CAAYH,MAAM,YAAYgC,cAAY,EAA1C,uBACA,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACI,cAAC,IAAD,CAAS6B,MAAQ,EAAGC,IAAKjB,EAAKwB,UAAUnC,MAAO8B,SAAW,EAAGC,UAAU,QAE3E,cAAClC,EAAA,EAAD,CAAYH,MAAM,UAAlB,SAA6B,IAAIsC,KAAKrB,EAAKsB,YAAYC,iBACvD,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAApB,qDAIJ,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG7B,UAAW8B,IAAGV,IAAOW,KAAMX,IAAOwB,QAA7E,SACA,eAACX,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CAAYH,MAAM,YAAYgC,cAAY,EAA1C,oBACA,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACI,cAAC,IAAD,CAAS6B,MAAQ,EAAGC,IAAKjB,EAAKyB,OAAOpC,MAAO8B,SAAW,EAAGC,UAAU,QAExE,cAAClC,EAAA,EAAD,CAAYH,MAAM,UAAlB,SAA6B,IAAIsC,KAAKrB,EAAKsB,YAAYC,iBACvD,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAApB,2DAOT,M,iBCjDTuC,G,MAAW,kCAIJC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DAEjBC,EAAaJ,EAEdE,IACCE,EAAU,UAAMJ,EAAN,sBAA4BE,IALrB,kBASmDG,IAAMC,IAAIF,GAT7D,2BAST9B,KAAOkB,EATE,EASFA,UAAWM,EATT,EASSA,UAAWC,EATpB,EASoBA,OAAQH,EAT5B,EAS4BA,WAT5B,kBAkBV,CAACJ,YAAWM,YAAWC,SAAQH,eAlBrB,4FAAH,sDAyBTW,EAAc,uCAAG,8BAAAJ,EAAA,+EAGDE,IAAMC,IAAN,UAAaN,EAAb,WAHC,uBAGf1B,EAHe,EAGfA,KAHe,kBAKfA,GALe,gCAOtBP,QAAQyC,MAAR,MAPsB,yDAAH,qDAWdC,EAAc,uCAAG,8BAAAN,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAERU,EAFQ,EAEfpC,KAAOoC,UAFQ,kBAIfA,EAAUC,KAAI,SAACC,GAAD,OAASA,EAAIC,SAJZ,gCAOtB9C,QAAQyC,MAAR,MAPsB,yDAAH,qDAYdM,EAAkB,uCAAG,WAAOC,GAAP,yBAAAZ,EAAA,yDAEhB,WAAXY,EAF2B,wBAGpBC,EAAOC,EAAQ,IACfC,EAAYF,EAAK,UACjBG,EAAMF,EAAQ,KALM,KAQPE,IARO,SAQgBD,EA3D9B,sGAmDc,yCAQDE,WARC,gBAQwCC,MAAK,SAACC,GAAS,OAAOA,KAR9D,eAQpBhD,EARoB,yBAUnBA,GAVmB,WAWV,eAAXyC,EAXqB,kCAYLV,IAAMC,IA9Df,0GAkDc,wBAYnBhC,EAZmB,EAYnBA,KAZmB,kBAcnBA,GAdmB,QAgB1BP,QAAQC,IAAI,mBAhBc,4CAAH,sD,0BC6BhBuD,EAhFD,SAACxE,GAAY,IAAD,EACYyE,mBAAS,IADrB,mBACfC,EADe,KACJC,EADI,KAEfxB,EAAWnD,EAAXmD,QAFe,EAGiBnD,EAAMuB,KAAtCkB,EAHe,EAGfA,UAAWO,EAHI,EAGJA,OAAQD,EAHJ,EAGIA,UAG1B6B,qBAAU,YANY,mCAOlBC,GACA7D,QAAQC,IAAIkC,GACZnC,QAAQC,IAAIwB,KAEd,IAGF,IAAMqC,EACFJ,EAAU,GACT,cAAC,OAAD,CACDnD,KAAO,CACHwD,OAAQL,EAAUd,KAAI,SAACoB,GAAD,OAAOA,EAAEC,cAC/BC,SAAS,CAAC,CACN3D,KAAMmD,EAAUd,KAAI,SAACoB,GAAD,OAAOA,EAAEvC,UAAU0C,SACvC/D,MAAO,YACPgE,YAAa,UACbC,MAAM,GACR,CACE9D,KAAMmD,EAAUd,KAAI,SAACoB,GAAD,OAAOA,EAAEhC,OAAOmC,SACpC/D,MAAO,SACPgE,YAAa,MACbpG,gBAAiB,uBACjBqG,MAAM,KAGdC,QAAU,CACN/F,MAAO,CACHM,SAAS,EACT0F,KAAM,6BAGT,KAGHC,EACF/C,EACC,cAAC,MAAD,CACGlB,KAAM,CACFwD,OAAQ,CAAC,WAAY,YAAa,UAClCG,SAAU,CAAC,CACP9D,MAAO,SACPpC,gBAAiB,CACb,qBACA,qBACA,sBACAuC,KAAM,CAACkB,EAAU7B,MAAOmC,EAAUnC,MAAOoC,EAAOpC,UAI5D0E,QAAS,CACLG,OAAO,CAAC5F,SAAQ,GAChBN,MAAO,CAACM,SAAS,EAAM0F,KAAK,oBAAD,OAAqBpC,OAGtD,KAGN,OACI,qBAAK/C,UAAWoB,IAAOC,UAAvB,SACK0B,EAASqC,EAAUV,IAlEN,4CAuEtB,4BAAA1B,EAAA,sEACuBI,IADvB,OACUjC,EADV,OAEIP,QAAQC,IAAIM,GACZoD,EAAapD,GAHjB,4CAvEsB,wB,oDC8BXmE,EA3BO,SAAC1F,GAAY,IACxB2F,EAAkC3F,EAAlC2F,oBAAqBhC,EAAa3D,EAAb2D,UAO5B,OALAiB,qBAAU,cAIP,IAEC,8BACI,cAACgB,EAAA,EAAD,CAAaxF,UAAWoB,IAAOqE,YAA/B,SACI,cAACC,EAAA,EAAD,CACAC,GAAG,iBACHT,QAAS3B,EACTqC,eAAgB,SAACC,GAAD,OAAYA,EAAS,IACrC7F,UAAWoB,IAAO0E,UAClBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBhF,MAAM,mBAAmBV,QAAQ,eACjFG,SAAU,SAACC,EAAOwF,GACdX,EAAoBW,WCzBzB,MAA0B,wCCMnC3H,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvC4C,UAAY,CACV5B,QAAS,OACT0G,WAAY,SACZC,aAAc,SACdC,cAAe,SACfrH,MAAO,OACPsH,UAAW,QAEbC,MAAO,CACLvH,MAAO,MACP,4BAA6B,CACzBA,MAAO,YASA,SAASwH,GAAY5G,GAClC,IAAMC,EAAUtB,IADyB,EAElB8F,qBAFkB,mBAElClD,EAFkC,KAE5BsF,EAF4B,OAGHpC,qBAHG,mBAGlCqC,EAHkC,KAGjBC,EAHiB,OAIPtC,qBAJO,mBAIlCd,EAJkC,KAIvBqD,EAJuB,KAKzCpC,qBAAU,YAL+B,mCAMvCqC,GACAC,MAEC,IAEH,IAAMvB,EAAmB,uCAAG,WAAOxC,GAAP,eAAAC,EAAA,6DAC1BpC,QAAQC,IAAIkC,GACZ4D,EAAW5D,GAFe,SAGPD,EAAUC,GAHH,OAGpB5B,EAHoB,OAI1BsF,EAAQtF,GAJkB,2CAAH,sDAUnB2F,EAAY,uCAAG,sBAAA9D,EAAA,sEACAM,IAClBY,MAAK,SAAC6C,GACHnG,QAAQC,IAAIkG,GACZH,EAAaG,MAJE,yDAAH,qDAUlB,OAAW,MAAR5F,GAA6B,MAAboC,EACP,2CAGN,sBAAKvD,UAAWH,EAAQwB,UAAxB,UACI,qBAAKrB,UAAWH,EAAQ0G,MAAOS,IAAI,WAAWC,IAAKC,IACnD,cAAC,EAAD,CAAY/F,KAAOA,IACnB,cAAC,EAAD,CAAeoC,UAAWA,EAAWgC,oBAAqBA,IAC1D,cAAC,EAAD,CAAOpE,KAAMA,EAAM4B,QAAU2D,OAvCE,4CA6CvC,4BAAA1D,EAAA,sEACuBF,IADvB,OACU3B,EADV,OAEIsF,EAAQtF,GAFZ,4CA7CuC,uBCpB3C,IAAM5C,GAAYC,aAAW,iBAAO,CAEhC6C,UAAW,CACP8F,OAAQ,UAGZpF,KAAM,CACFoF,OAAQ,OACRnI,MAAO,OAEP,2BAA4B,CAExBmI,OAAQ,oBAKhBC,YAAa,CACTC,aAAc,gCAGlBC,WAAY,CACRD,aAAc,gCAGlBE,aAAc,CACVF,aAAc,oCAMP,SAASG,GAAa5H,GAEjC,IAAMC,EAAUtB,KACiBkJ,GAAa7H,EAAvC8H,YAAuC9H,EAA1B+H,YAA0B/H,EAAb6H,WAKjC,OAHAjD,qBAAU,WACN5D,QAAQC,IAAIjB,KACb,CAACA,IAEA,qBAAKI,UAAWH,EAAQwB,UAAxB,SACI,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UAEI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG7B,UAAW8B,IAAGjC,EAAQkC,KAAMlC,EAAQuH,aAA/E,SACA,eAACnF,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CAAYH,MAAM,YAAYgC,cAAY,EAA1C,gCACA,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACI,cAAC,IAAD,CAAS6B,MAAQ,EAAGC,IAAKqF,EAAUA,EAAUG,OAAO,GAAGC,mBAAoBvF,SAAW,EAAGC,UAAU,QAEvG,cAAClC,EAAA,EAAD,CAAYH,MAAM,UAAlB,SAA6B,IAAIsC,KAAKiF,EAAUA,EAAUG,OAAO,GAAGE,MAAMpF,iBAC1E,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAApB,wDAIJ,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG7B,UAAW8B,IAAGjC,EAAQkC,KAAMlC,EAAQyH,YAA/E,SACA,eAACrF,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CAAYH,MAAM,YAAYgC,cAAY,EAA1C,gDACA,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACI,cAAC,IAAD,CAAS6B,MAAQ,EAAGC,IAAKqF,EAAUA,EAAUG,OAAO,GAAGG,wBAAyBzF,SAAW,EAAGC,UAAU,QAE5G,cAAClC,EAAA,EAAD,CAAYH,MAAM,UAAlB,SAA6B,IAAIsC,KAAKiF,EAAUA,EAAUG,OAAO,GAAGE,MAAMpF,iBAC1E,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAApB,sFAIJ,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG7B,UAAW8B,IAAGjC,EAAQkC,KAAMlC,EAAQ0H,cAA/E,SACA,eAACtF,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CAAYH,MAAM,YAAYgC,cAAY,EAA1C,qCACA,eAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACKmH,EAAUA,EAAUG,OAAO,GAAGI,oCADnC,OAGA,cAAC3H,EAAA,EAAD,CAAYH,MAAM,UAAlB,SAA6B,IAAIsC,KAAKiF,EAAUA,EAAUG,OAAO,GAAGE,MAAMpF,iBAC1E,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAApB,kFCjFL,WAA0B,0C,UCKnC/B,GAAYC,aAAW,iBAAO,CAEhC6C,UAAW,CACP5B,QAAS,OACTwI,YAAa,SACbC,aAAc,OACdlJ,MAAO,MAEP,2BAA6B,CACrBA,MAAO,SAMnB0F,UAAW,CACP1F,MAAO,OACP,2BAA6B,QAa/BmJ,GAAS,CAAC,SAAU,gBAAiB,QAAS,iBAAkB,SAAU,UAAW,SAAU,cAAe,QAAS,uBAAwB,SAC/IC,GAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrG,SAASC,GAAazI,GAAO,IAEjCuB,EAAiBvB,EAAjBuB,KAAM4B,EAAWnD,EAAXmD,QAF0B,EAGTsB,qBAHS,mBAGhCiE,EAHgC,KAGvBC,EAHuB,KAIjC1I,EAAUtB,KAJuB,EAKT8F,qBALS,mBAKhCmE,EALgC,KAKvBC,EALuB,OAMHpE,qBANG,mBAMhCqE,EANgC,KAMpBC,EANoB,KASvCnE,qBAAU,YAkEV,SAAkBzB,GACd,GAAW,MAAR5B,EACC,GAAa,MAAV4B,EAAe,CACd,IAAI6F,EAAU,GAEdT,GAAOU,SAAQ,SAACC,GACZ,IAAMC,EAAS5H,EAAK6H,MAAK,SAAAC,GAAC,OAAIA,EAAElG,SAAW+F,KAC3CF,EAAQG,EAAOhG,SAASgG,KAE5B,IAAMG,EAclB,SAAqBZ,EAASa,GAC1B,IAAIhI,EAAOmH,EAEA,UAARa,IACChI,EAAI,MAAJ,KAAsB0H,SAAQ,SAACjE,GAC3BuD,GAAOU,SAAQ,SAACO,GAEyC,MAAlDjI,EAAKiI,GAAGjI,KAAK6H,MAAK,SAACF,GAAD,OAASA,EAAIhB,MAAQlD,EAAEkD,SACxC3G,EAAKiI,GAAGjI,KAAKkI,KAAK,CAACvB,KAAMlD,EAAEkD,KAAMwB,+BAAgC,aAK7EnB,GAAOU,SAAQ,SAACO,GACZjI,EAAKiI,GAAGjI,KAAKoI,MAAK,SAACvG,EAAEwG,GAAH,OAAU,IAAIhH,KAAKQ,EAAE8E,MAAM2B,UAAY,IAAIjH,KAAKgH,EAAE1B,MAAM2B,iBAOlF,OAAOtI,EAnCoBuI,CAAYd,EAAS,UACxCL,EAAWW,GAqCvB,SAAuBZ,GACnB,IAAME,EAAUL,GAAO3E,KAAI,SAACmG,EAAGC,GAGvB,MAAQ,CACJzI,KAFKmH,EAAQqB,GAAGxI,KAEHqC,KAAI,SAACoB,GAAD,OAAOA,EAAE0E,kCAC1BtI,MAAO2I,EACP3E,YAAaoD,GAAQwB,GACrB3E,MAAM,MAIlBrE,QAAQC,IAAI,UAAW2H,GACvBC,EAAWD,GAjDHqB,CAAaX,OACZ,CACD,IAAMY,EAAY3I,EAAK6H,MAAK,SAAAC,GAAC,OAAIA,EAAElG,SAAWA,KAC9C4F,EAAcmB,GACdlJ,QAAQC,IAAI,WAAYkC,EAAS+G,IAhFzCC,CAAShH,KAGX,CAACnD,IAGH,IAAMoK,EACF1B,GAAWE,EACV,qBAAKxI,UAAWH,EAAQ6E,UAAxB,SACG,cAAC,OAAD,CACJvD,KAAO,CACHwD,OAAQ2D,EAAO,MAAP,KAAyB9E,KAAI,SAACoB,GAAD,OAAOA,EAAEkD,QAC9ChD,SAAS,aAAI0D,IAGjBtD,QAAU,CACN/F,MAAO,CACHM,SAAS,EACT0F,KAAM,yCAKd,KAGE8E,EACFvB,EACC,qBAAK1I,UAAWH,EAAQ6E,UAAxB,SACG,cAAC,OAAD,CACJvD,KAAO,CACHwD,OAAQ+D,EAAU,KAASlF,KAAI,SAACoB,GAAD,OAAOA,EAAEkD,QACxChD,SAAU,CAAC,CAAE3D,KAAMuH,EAAU,KAASlF,KAAI,SAACoB,GAAD,OAAOA,EAAEiD,sBACvC7G,MAAO,qBACPgE,YAAaoD,GAAQ,GACrBnD,MAAM,GACH,CAAE9D,KAAMuH,EAAU,KAASlF,KAAI,SAACoB,GAAD,OAAOA,EAAE0E,kCAC3CtI,MAAO,yBACPgE,YAAaoD,GAAQ,GACrBnD,MAAM,GACJ,CAAE9D,KAAMuH,EAAU,KAASlF,KAAI,SAACoB,GAAD,OAAOA,EAAEsF,sBAC1ClJ,MAAO,qBACPgE,YAAaoD,GAAQ,GACrBnD,MAAM,KAItBC,QAAU,CACN/F,MAAO,CACHM,SAAS,EACT0F,KAAK,yBAAD,OAA2BpC,SAKrC,qDAGN,OACI,qBAAK/C,UAAWH,EAAQwB,UAAxB,SACK0B,EAASkH,EAAaD,ICnGnC,IAAMzL,GAAYC,aAAW,iBAAO,CAEhC6C,UAAY,CACV5B,QAAS,OACT0G,WAAY,SACZC,aAAc,SACdC,cAAe,SACfrH,MAAO,OACPsH,UAAW,QAEbC,MAAO,CACHvH,MAAO,MAET,4BAA6B,CACzBA,MAAO,YAWF,SAASmL,KACpB,IAAMtK,EAAUtB,KADmB,EAEG8F,qBAFH,mBAE5BqD,EAF4B,KAEf0C,EAFe,OAGG/F,qBAHH,mBAG5BsD,EAH4B,KAGf0C,EAHe,OAIDhG,qBAJC,mBAI5BoD,EAJ4B,KAIjB6C,EAJiB,OAKLjG,qBALK,mBAK5BtB,EAL4B,KAKnB4D,EALmB,OAMDtC,qBANC,6BAQnCG,qBAAU,YARyB,mCAS/B1B,KAGD,IAQH,OAAG2E,GAAaE,GAAeD,EAEvB,sBAAK1H,UAAWH,EAAQwB,UAAxB,UACI,qBAAKrB,UAAWH,EAAQ0G,MAAOS,IAAI,WAAWC,IAAKsD,KACvD,cAAC/C,GAAD,CAAcC,UAAWA,EAAWC,YAAcA,EAAaC,YAAaA,IAC5E,cAAC,EAAD,CAAepE,UAAWoE,EAAYnE,KAAI,SAAC4F,GAAD,OAAMA,EAAErG,WAAUwC,oBAVxC,SAACxC,GACzB4D,EAAW5D,GACXnC,QAAQC,IAAI,qBAAsBkC,MAS9B,cAACsF,GAAD,CAAclH,KAAQwG,EAAa5E,QAASA,OAIzC,2CA9BwB,4CAkCnC,gCAAAC,EAAA,sEACwBW,EAAmB,WAD3C,cACU6G,EADV,gBAEwB7G,EAAmB,eAF3C,OAEU8G,EAFV,OAGUC,EAAQD,EAAMzB,MAAK,SAAAC,GAAC,MAAiB,SAAbA,EAAElG,WAEhCsH,EAAeI,GACfH,EAAaI,EAAMvJ,MACnBiJ,EAAeI,GAPnB,6CAlCmC,uBC9BvC,IAAMjM,GAAYC,aAAW,iBAAO,CAEhC6C,UAAY,CACV5B,QAAS,OACT0G,WAAY,SACZC,aAAc,SACdC,cAAe,SACfrH,MAAO,OACPsH,UAAW,QAEbC,MAAO,CACHvH,MAAO,MAET,4BAA6B,CACzBA,MAAO,YAWF,SAASmL,KACpB,IAAMtK,EAAUtB,KAWZ,OARJiG,qBAAU,cAIP,IAKK,qBAAKxE,UAAWH,EAAQwB,UAAxB,SACI,qBAAKrB,UAAWH,EAAQ0G,MAAOS,IAAI,WAAWC,IAAK,mGCTpD0D,OAtBf,WAAgB,IAAD,EACatG,mBAAS,SADtB,mBACJvE,EADI,KACEC,EADF,KAGX,OACE,sBAAKC,UAAWoB,IAAOC,UAAvB,UACE,cAAC,EAAD,CAAYvB,KAAMA,EAAMC,QAAWA,IAC1B,SAARD,EACD,cAAC0G,GAAD,IACU,WAAR1G,EACI,cAACqK,GAAD,IACS,SAARrK,EAAkB,cAAC,GAAD,IACjB,SCVD8K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5G,MAAK,YAAkD,IAA/C6G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,mBCfAvM,EAAOC,QAAU,CAAC,YAAc,mCAAmC,UAAY,oC","file":"static/js/main.1cf8c0bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__RT-k2\",\"card\":\"Cards_card__ALe_T\",\"infected\":\"Cards_infected__1pby2\",\"recovered\":\"Cards_recovered__Vtokv\",\"deaths\":\"Cards_deaths__LJqnx\"};","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport {Toolbar} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    width: '100vw'\n  },\n  spacer:{\n    width: 'inherit',\n    height: '48px',\n    \"@media (max-width: 770px)\":{\n      height: '100px'\n    }\n  },\n  title:{\n    flexGrow: 1,\n    \"@media (max-width: 770px)\":{\n      width: '100%',\n      padding: '15px 0 5px 20px'\n    }\n  },\n\n  tabs:{\n    \"@media (max-width: 770px)\":{\n      alignSelf:'flexEnd'\n      \n    }\n  },\n  toolbar:{\n    minHeight: '48px',\n    \n    \"@media (max-width: 770px)\":{\n      alignSelf:'flexEnd',\n      display: 'block',\n      paddingLeft: 0\n    }\n  }\n}));\n\n        \nexport default function TabsWrappedLabel(props) {\n  const classes = useStyles();\n  const {menu, setMenu} = props;\n\n\n  const handleChange = (event, newMenu) => {\n    setMenu(newMenu);\n    console.log(newMenu)\n  };\n\n  return (\n    <div className={classes.root}>\n      \n      <AppBar color=\"primary\" position=\"fixed\">\n      <Toolbar className={classes.toolbar} >\n      <Typography variant=\"h6\" className={classes.title}>\n            COVID-19 Tracker \n          </Typography>\n          \n          <Tabs className={classes.tabs} value={menu} onChange={handleChange} aria-label=\"menu\">\n          <Tab\n            value=\"covid\"\n            label=\"COVID-19\"\n          />\n          <Tab value=\"vaccine\" label=\"Vaccination\" />\n          <Tab value=\"heart\" label=\"\" icon={<FavoriteIcon color=\"secondary\"/>} />\n          \n        </Tabs>\n      </Toolbar>\n\n      </AppBar>\n      <div className={classes.spacer}>\n        \n              </div>\n    </div>\n  );\n}","import React from 'react';\nimport './Cards.module.css'\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = (props)  => {\n\n    \n    const {data} = props\n    if(data != null){\n        return (\n            <div className={styles.container}>\n                <Grid container spacing={3} justify=\"center\">\n                    \n                    <Grid item component={Card} xs={12} md={4} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"secondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start ={0} end={data.confirmed.value} duration ={2} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"primary\">{new Date(data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                    </Grid>\n    \n                    <Grid item component={Card} xs={12} md={4} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"secondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start ={0} end={data.recovered.value} duration ={2} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"primary\">{new Date(data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                    </Grid>\n    \n                    <Grid item component={Card} xs={12} md={4} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"secondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start ={0} end={data.deaths.value} duration ={2} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"primary\">{new Date(data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Cards;\n","import axios from 'axios'; //request api calls\nimport bent from 'bent';\n\nconst case_url = 'https://covid19.mathdro.id/api';\nconst country_url = 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/locations.csv';\nconst vaccine_url = 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.json';\n\nexport const fetchData = async (country) => {\n\n    let access_url = case_url;\n\n    if(country){\n        access_url = `${case_url}/countries/${country}`\n    }\n\n    try{\n        const { data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(access_url);\n\n        // const modifiedData = {\n        //     confirmed,\n        //     recovered,\n        //     deaths,\n        //     lastUpdate,\n        // }\n        \n        return {confirmed, recovered, deaths, lastUpdate };\n\n    }catch(error){\n        \n    }\n}\n\nexport const fetchDailyData = async () => {\n\n    try{\n        const {data} = await axios.get(`${case_url}/daily`)\n\n        return data\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try{\n        const {data: {countries}} = await axios.get(`${case_url}/countries`);\n        \n        return countries.map((con) => con.name)\n\n    }catch(error){\n        console.error(error);\n\n    }\n}\n\nexport const fetchVaccineStatus = async (keyword) => {\n    \n    if(keyword == 'country'){\n        const bent = require('bent');\n        const getString = bent('string');\n        const csv = require('csvtojson')\n        \n        \n        const data = await csv().fromString(await getString(country_url)).then((obj) => {return obj})\n        \n        return data\n    }else if(keyword == 'vaccination'){\n        const {data} = await axios.get(vaccine_url);\n        \n        return data\n    }else{\n        console.log('Invalid Access!')\n    }\n\n}\n","import React, {useState, useEffect } from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2'\nimport styles from './Chart.module.css'\nconst Chart = (props)  => {\n    const [dailyData, setDailyData] = useState({});\n    const {country} = props;\n    const {confirmed, deaths, recovered} = props.data;\n\n\n    useEffect(()=> {\n        LoadData();\n        console.log(country)\n        console.log(confirmed)\n    }\n    , [])\n    \n\n    const lineChart = (\n        dailyData[0] ?\n        (<Line\n        data ={{\n            labels: dailyData.map((d) => d.reportDate),\n            datasets:[{\n                data: dailyData.map((d) => d.confirmed.total),\n                label: 'Confirmed',\n                borderColor: '#3333ff',\n                fill: true\n            },{\n                data: dailyData.map((d) => d.deaths.total),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }]\n        }}\n        options= {{\n            title: {\n                display: true,\n                text: 'Global COVID-19 Status'\n            }\n                }}\n        />): null\n    )\n\n    const barChart  =(\n        confirmed ? \n        (<Bar\n            data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'people',\n                    backgroundColor: [\n                        'rgba(0,0,255, 0.5)',\n                        'rgba(0,255,0, 0.5)',\n                        'rgba(255,0,0, 0.5)'],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                }],\n            }}\n\n            options={{\n                legend:{display:false},\n                title: {display: true, text:`Current state in ${country}`}\n            }}\n        />)\n        : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country? barChart: lineChart}\n            \n        </div>\n    )\n\n    async function LoadData(){\n        const data = await fetchDailyData();\n        console.log(data)\n        setDailyData(data);\n\n    }\n}\n\n\nexport default Chart;\n","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl, TextField} from '@material-ui/core'\nimport styles from './CountryPicker.module.css';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst CountryPicker = (props)  => {\n    const {handleCountryChange, countries} = props;\n    \n    useEffect(() => {\n        \n       \n\n    }, [])\n    return (\n        <div>\n            <FormControl className={styles.formControl}>\n                <Autocomplete\n                id=\"combo-box-demo\"\n                options={countries}\n                getOptionLabel={(option) => option + ''}\n                className={styles.searchBar}\n                renderInput={(params) => <TextField {...params} label=\"Select a country\" variant=\"outlined\" />}\n                onChange={(event, newValue) => {\n                    handleCountryChange(newValue);\n                  }}\n                />\n            </FormControl>\n        </div>\n    )\n}\n\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/covid_image.43554543.jpg\";","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CovidCards, Chart, CountryPicker } from '../../components';\nimport {fetchData, fetchVaccineStatus,fetchCountries } from '../../api';\nimport covidImage from '../../assets/images/covid_image.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  \n  container : {\n    display: 'flex',\n    alignItems: 'center',\n    justifyItems: 'center',\n    flexDirection: 'column',\n    width: '100%',\n    marginTop: '40px'\n  },\n  image: {\n    width: '25%',\n    '@media (max-width: 770px)': {\n        width: '90%'\n    }\n      \n    }\n    \n  \n  \n}));\n\nexport default function CovidStatus(props) {\n  const classes = useStyles();\n  const [data, setData]= useState();\n  const [selectedCountry, setCountry] = useState();\n  const [countries, setCountries] = useState();\n  useEffect(() => {\n    dataLoading();\n    getCountries();\n    \n  }, [])\n\n  const handleCountryChange = async (country) => {\n    console.log(country)\n    setCountry(country);\n    const data = await fetchData(country);\n    setData(data);\n     \n    \n\n  }\n\n  const getCountries = async () => {\n    const rows = await fetchCountries()\n    .then((rows) => {\n        console.log(rows)\n        setCountries(rows)\n        });\n}\n\n\n\n  if(data == null && countries == null){\n      return (<p>Loading...</p>)\n  }else{\n    return (\n        <div className={classes.container}>\n            <img className={classes.image} alt=\"COVID-19\" src={covidImage}/>\n            <CovidCards data ={data}></CovidCards>\n            <CountryPicker countries={countries} handleCountryChange={handleCountryChange}></CountryPicker>\n            <Chart data={data} country ={selectedCountry} ></Chart>\n        </div>\n    )\n  }\n    \n\n    async function dataLoading(){\n        const data = await fetchData();\n        setData(data)\n        \n      }\n\n}","import React, {useEffect} from 'react';\n\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\n\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  \n    container: {\n        margin: '50px 0'\n    },\n    \n    card: {\n        margin: '0 0%',\n        width: 'auto',\n\n        '@media(max-width: 770px)': {\n       \n            margin: '2% 0 !important'\n       \n    }\n    },\n    \n    total_count: {\n        borderBottom: '10px solid rgba(0,0,255,0.5)'\n    },\n    \n    total_rate: {\n        borderBottom: '10px solid rgba(0,255,0,0.5)'\n    },\n    \n    full_vaccine: {\n        borderBottom: '10px solid rgba(255,0,0,0.5)'\n    },\n}));\n    \n    \n\nexport default function VaccineCards(props){\n\n    const classes = useStyles();\n    const {countryData, vaccineData, worldData} = props\n\n    useEffect(() => {\n        console.log(props)\n    }, [props])\n    return (\n        <div className={classes.container}>\n            <Grid container spacing={3} justify=\"center\">\n                \n                <Grid item component={Card} xs={12} md={4} className={cx(classes.card, classes.total_count)}>\n                <CardContent>\n                    <Typography color=\"secondary\" gutterBottom>Global Vaccination</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp start ={0} end={worldData[worldData.length-1].total_vaccinations} duration ={2} separator=\",\"/>\n                    </Typography>\n                    <Typography color=\"primary\">{new Date(worldData[worldData.length-1].date).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of global COVID-19 vaccination</Typography>\n                </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={4} className={cx(classes.card, classes.total_rate)}>\n                <CardContent>\n                    <Typography color=\"secondary\" gutterBottom>Global Full Vaccination (2 shots) </Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp start ={0} end={worldData[worldData.length-1].people_fully_vaccinated} duration ={2} separator=\",\"/>\n                    </Typography>\n                    <Typography color=\"primary\">{new Date(worldData[worldData.length-1].date).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of global full vaccination (people who have taken 2 shots)  </Typography>\n                </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={4} className={cx(classes.card, classes.full_vaccine)}>\n                <CardContent>\n                    <Typography color=\"secondary\" gutterBottom>Global Vaccination Rate</Typography>\n                    <Typography variant=\"h5\">\n                        {worldData[worldData.length-1].people_fully_vaccinated_per_hundred}%\n                    </Typography>\n                    <Typography color=\"primary\">{new Date(worldData[worldData.length-1].date).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Global vaccination rate for those who have taken two shots</Typography>\n                </CardContent>\n                </Grid>\n\n                \n            </Grid>\n        </div>\n    )\n}\n\n\n","export default __webpack_public_path__ + \"static/media/vaccine_image.52e01c88.jpg\";","import { makeStyles } from '@material-ui/core';\nimport React, {useState, useEffect } from 'react';\nimport {Line, Bar} from 'react-chartjs-2'\n\n\nconst useStyles = makeStyles(() => ({\n  \n    container: {\n        display: 'flex',\n        justifySelf: 'center',\n        marginBottom: '80px',\n        width: '85%',\n        \n        '@media(max-width: 770px)' : {\n                width: '100%',\n                \n            \n        }\n    },\n\n    lineChart: {\n        width: '100%',\n        '@media(max-width: 770px)' : {\n            \n        \n    }\n    }\n\n    \n    \n    \n    \n    \n}));\n    \nconst topTen = ['Israel', 'United States', 'China', 'United Kingdom', 'France', 'Germany', 'Russia', 'South Korea', 'Japan', 'United Arab Emirates', 'World'];   \nconst borders = ['#00A5E3', '#8DD7BF', '#FF96C5', '#FF5768', '#FFBF65', '#F2D4CC', '#E77577', '#6C88C4', '#C05780', '#FC6238']\nexport default function VaccineChart(props){\n    \n    const {data, country} = props;\n    const [topData, setTopData] = useState();\n    const classes = useStyles();\n    const [dataset, setDataset] = useState();\n    const [singleData, setSingleData] = useState();\n\n\n    useEffect(()=> {\n        loadData(country);\n        \n    }\n    , [props])\n    \n\n    const topTenChart = (\n        topData && dataset?\n        (<div className={classes.lineChart}>\n            <Line\n        data ={{\n            labels: topData['World']['data'].map((d) => d.date),\n            datasets:[...dataset] \n        }} \n\n        options= {{\n            title: {\n                display: true,\n                text: 'Full Vaccination Rate by country'\n            }\n                }}\n        />\n            </div>): \n        null\n    )\n\n    const singleChart  =(\n        singleData ? \n        (<div className={classes.lineChart}>\n            <Line\n        data ={{\n            labels: singleData['data'].map((d) => d.date),\n            datasets: [{ data: singleData['data'].map((d) => d.total_vaccinations),\n                        label: \"Total vaccinations\",\n                        borderColor: borders[0],\n                        fill: false\n                        }, { data: singleData['data'].map((d) => d.total_vaccinations_per_hundred),\n                        label: \"Total vaccination rate\",\n                        borderColor: borders[1],\n                        fill: false\n                        },{ data: singleData['data'].map((d) => d.daily_vaccinations),\n                        label: \"Daily vaccinations\",\n                        borderColor: borders[2],\n                        fill: false\n                        }]\n        }} \n\n        options= {{\n            title: {\n                display: true,\n                text: `Vaccination Status in ${country}`\n            }\n                }}\n        />\n            </div>)\n        : <p>Do not have the data</p>\n    );\n\n    return (\n        <div className={classes.container}>\n            {country? singleChart: topTenChart}\n            \n        </div>\n    )\n\n    function loadData(country){\n        if(data != null){\n            if(country== null){\n                let newData = [];\n\n                topTen.forEach((ele) => {\n                    const newRow = data.find(r => r.country == ele)\n                    newData[newRow.country]=newRow\n                })\n                const processed =  processData(newData, 'Global')\n                setTopData(processed);\n                dataset_init(processed)\n            }else{\n                const targetRow = data.find(r => r.country == country)\n                setSingleData(targetRow);\n                console.log('single: ', country, targetRow)\n            }\n            \n            \n        }\n\n    }\n\n    function processData(topData, type){\n        let data = topData;\n\n        if(type == 'Global'){\n            data['World']['data'].forEach((d) => {\n                topTen.forEach((c) => {\n                    \n                    if(data[c].data.find((ele) => ele.date == d.date) == null){\n                        data[c].data.push({date: d.date, total_vaccinations_per_hundred: null})\n                    }\n                })\n            })\n    \n            topTen.forEach((c) => {\n                data[c].data.sort((a,b) => (new Date(a.date).getTime() - new Date(b.date).getTime()));\n            })\n        }else{\n\n        }\n        \n\n        return data\n    }\n\n    function dataset_init (topData) {\n        const dataset = topTen.map((e, index)=> {\n                let target;\n                target = topData[e].data\n                return ({\n                    data: target.map((d) => d.total_vaccinations_per_hundred),\n                    label: e,\n                    borderColor: borders[index],\n                    fill: false\n                })\n            \n        })\n        console.log('dataset', dataset);\n        setDataset(dataset)\n        \n    }\n\n    \n}\n\n\n","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VaccineCards from '../../components/VaccineCards/';\nimport { fetchVaccineStatus } from '../../api';\nimport {CountryPicker} from '../../components/';\nimport VaccineImage from '../../assets/images/vaccine_image.jpg';\nimport VaccineChart from '../../components/VaccineChart/'\n\nconst useStyles = makeStyles(() => ({\n  \n    container : {\n      display: 'flex',\n      alignItems: 'center',\n      justifyItems: 'center',\n      flexDirection: 'column',\n      width: '100%',\n      marginTop: '40px'\n    },\n    image: {\n        width: '30%',\n\n      '@media (max-width: 770px)': {\n          width: '90%'\n      }\n        \n      }\n      \n    \n    \n  }));\n\n  \n\nexport default function VaccineStatus(){\n    const classes = useStyles();\n    const [countryData, setCountryData] = useState(); \n    const [vaccineData, setVaccineData] = useState();\n    const [worldData, setWorldData] = useState(); \n    const [country, setCountry] = useState();\n    const [graphData, setGraphData] = useState();\n\n    useEffect(() => {\n        fetchData();\n        \n\n    }, [])\n\n\n    const handleCountryChange = (country) => {\n        setCountry(country)\n        console.log('selected Country: ', country)\n    }\n\n    if(worldData && vaccineData && countryData){\n        return(\n            <div className={classes.container}>\n                <img className={classes.image} alt=\"COVID-19\" src={VaccineImage}/>\n            <VaccineCards worldData={worldData} countryData ={countryData} vaccineData={vaccineData}/>\n            <CountryPicker countries={vaccineData.map((c)=> c.country)} handleCountryChange={handleCountryChange}></CountryPicker>\n            <VaccineChart data = {vaccineData} country={country}/>\n            </div>\n        );\n    }else{\n        return(<p>Loading...</p>)\n    }\n    \n\n    async function fetchData(){\n        const cData = await fetchVaccineStatus('country')\n        const vData = await fetchVaccineStatus('vaccination')\n        const wData = vData.find(r => r.country == 'World')\n        \n        setVaccineData(vData)\n        setWorldData(wData.data)\n        setCountryData(cData)\n\n    }\n\n    \n}","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  \n    container : {\n      display: 'flex',\n      alignItems: 'center',\n      justifyItems: 'center',\n      flexDirection: 'column',\n      width: '100%',\n      marginTop: '40px'\n    },\n    image: {\n        width: '30%',\n\n      '@media (max-width: 770px)': {\n          width: '90%'\n      }\n        \n      }\n      \n    \n    \n  }));\n\n  \n\nexport default function VaccineStatus(){\n    const classes = useStyles();\n    \n\n    useEffect(() => {\n        \n        \n\n    }, [])\n\n\n    \n        return(\n            <div className={classes.container}>\n                <img className={classes.image} alt=\"COVID-19\" src={'https://img.huffingtonpost.com/asset/603de8323f0000d608a3f5b7.jpg?ops=scalefit_630_noupscale'}/>\n            </div>\n        );\n    \n    \n\n    \n}","import React, {useEffect, useState} from 'react';\nimport styles from './App.module.css'\n\n\nimport Navigation from './container/Navigation'\n\nimport CovidStatus from './pages/CovidStatus/';\nimport VaccineStatus from './pages/VaccineStatus';\nimport AboutMe from './pages/AboutMe';\n\n\nfunction App() {\n    const [menu, setMenu] = useState('covid');\n\n    return (\n      <div className={styles.container}>\n        <Navigation menu={menu} setMenu = {setMenu}/>\n        {menu == 'covid'? \n        <CovidStatus/>\n        : menu == 'vaccine' ? \n              <VaccineStatus/> \n              :menu == 'heart' ? <AboutMe/>\n              : null\n              }\n        \n        \n      </div>\n    );\n\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"searchBar\":\"CountryPicker_searchBar__1PX6a\"};"],"sourceRoot":""}